{"version":3,"sources":["pages/DragonTiger/BroadCast/DragonTigerBroadcast.jsx","pages/DragonTiger/Viewer/DragonTigerViewer.jsx","utils/custom-hooks/useSocketIO.js","config/index.js","pages/Home/Home.styles.jsx","pages/Home/Home.jsx","routes/routerList.js","routes/RouteValidator.js","routes/routes.js","routes/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["stream","peerConnection","useSocketIO","console","log","socketio","connect","peerConnections","config","iceServers","GamesContainer","styled","div","display","padding","justifyContent","maxWidth","GameIcon","img","width","height","GameTitle","span","fontWeight","fontSize","border","textAlign","Home","className","to","src","alt","routerList","key","label","path","component","hasNavbar","socket","useEffect","on","id","description","setRemoteDescription","RTCPeerConnection","videoElement","srcObject","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","emit","createOffer","then","sdp","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","close","window","onunload","onbeforeunload","audioSelect","videoSelect","document","querySelector","tracks","stop","onchange","getStream","getDevices","gotDevices","a","navigator","mediaDevices","enumerateDevices","deviceInfos","deviceInfo","option","createElement","value","deviceId","kind","text","length","appendChild","audioSource","videoSource","constraints","audio","exact","undefined","video","getUserMedia","gotStream","catch","handleError","selectedIndex","options","findIndex","getAudioTracks","getVideoTracks","error","htmlFor","playsInline","autoPlay","muted","style","transform","createAnswer","ontrack","streams","e","handleAudio","boolean","onClick","RouteValidator","Component","CustomRoutes","routes","map","props","element","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b2702c0.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useSocketIO } from '../../../utils/custom-hooks/useSocketIO';\n\nconst peerConnections = {};\nconst config = {\n  iceServers: [\n    {\n      \"urls\": \"stun:stun.l.google.com:19302\",\n    },\n    // {\n    //   \"urls\": \"turn:TURN_IP?transport=tcp\",\n    //   \"username\": \"TURN_USERNAME\",\n    //   \"credential\": \"TURN_CREDENTIALS\"\n    // }\n  ]\n};\nlet stream;\n\nexport const DragonTigerBroadcast = () => {\n  const socket = useSocketIO()\n\n  useEffect(() => {\n    socket.on(\"answer\", (id, description) => {\n      peerConnections[id].setRemoteDescription(description);\n    });\n\n    socket.on(\"watcher\", id => {\n      const peerConnection = new RTCPeerConnection(config);\n      peerConnections[id] = peerConnection;\n\n      stream = videoElement.srcObject;\n      stream.getTracks().forEach(track => {\n        return peerConnection.addTrack(track, stream);\n      });\n\n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          socket.emit(\"candidate\", id, event.candidate);\n        }\n      };\n\n      peerConnection\n        .createOffer()\n        .then(sdp => peerConnection.setLocalDescription(sdp))\n        .then(() => {\n          socket.emit(\"offer\", id, peerConnection.localDescription);\n        });\n    });\n\n    socket.on(\"candidate\", (id, candidate) => {\n      peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    socket.on(\"disconnectPeer\", id => {\n      peerConnections[id].close();\n      delete peerConnections[id];\n    });\n\n    window.onunload = window.onbeforeunload = () => {\n      socket.close();\n    };\n  }, [socket])\n\n  // Get camera and microphone\n  let videoElement = null\n  let audioSelect = null\n  let videoSelect = null\n\n  useEffect(() => {\n    videoElement = document.querySelector(\"video\");\n    audioSelect = document.querySelector(\"select#audioSource\");\n    videoSelect = document.querySelector(\"select#videoSource\");\n  }, [])\n\n  useEffect(()=>{\n    return () => {\n      const tracks = videoElement.srcObject.getTracks();\n      tracks[0].stop();\n      tracks.forEach(track => track.stop());\n    }\n  }, [videoElement])\n\n  useEffect(() => {\n    if (audioSelect && videoSelect) {\n      audioSelect.onchange = getStream;\n      videoSelect.onchange = getStream;\n\n      getStream()\n        .then(getDevices)\n        .then(gotDevices);\n    }\n  }, [videoElement, audioSelect, videoSelect])\n\n  const getDevices = async () => {\n    return await navigator.mediaDevices.enumerateDevices();\n  }\n\n  function gotDevices(deviceInfos) {\n    window.deviceInfos = deviceInfos;\n    for (const deviceInfo of deviceInfos) {\n      const option = document.createElement(\"option\");\n      option.value = deviceInfo.deviceId;\n      if (deviceInfo.kind === \"audioinput\") {\n        option.text = deviceInfo.label || `Microphone ${audioSelect.length + 1}`;\n        audioSelect.appendChild(option);\n      } else if (deviceInfo.kind === \"videoinput\") {\n        option.text = deviceInfo.label || `Camera ${videoSelect.length + 1}`;\n        videoSelect.appendChild(option);\n      }\n    }\n  }\n\n  function getStream() {\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n    const audioSource = audioSelect.value;\n    const videoSource = videoSelect.value;\n    const constraints = {\n      audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n      video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n    };\n    return navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(gotStream)\n      .catch(handleError);\n  }\n\n  function gotStream(stream) {\n    window.stream = stream;\n    audioSelect.selectedIndex = [...audioSelect.options].findIndex(\n      option => option.text === stream.getAudioTracks()[0].label\n    );\n    videoSelect.selectedIndex = [...videoSelect.options].findIndex(\n      option => option.text === stream.getVideoTracks()[0].label\n    );\n    videoElement.srcObject = stream;\n    socket.emit(\"broadcaster\");\n  }\n\n  function handleError(error) {\n    console.error(\"Error: \", error);\n  }\n\n\n  return (\n    <>\n      <section className=\"select\">\n        <label htmlFor=\"audioSource\">Audio source: </label>\n        <select id=\"audioSource\"></select>\n      </section>\n\n      <section className=\"select\">\n        <label htmlFor=\"videoSource\">Video source: </label>\n        <select id=\"videoSource\"></select>\n      </section>\n\n      <video playsInline autoPlay muted style={{ transform : 'rotateY(180deg)'}}></video>\n    </>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSocketIO } from '../../../utils/custom-hooks/useSocketIO';\n\nlet peerConnection;\nconst config = {\n  iceServers: [\n    {\n      \"urls\": \"stun:stun.l.google.com:19302\",\n    },\n    // {\n    //   \"urls\": \"turn:TURN_IP?transport=tcp\",\n    //   \"username\": \"TURN_USERNAME\",\n    //   \"credential\": \"TURN_CREDENTIALS\"\n    // }\n  ]\n};\n\nexport const DragonTigerViewer = () => {\n  const socket = useSocketIO()\n\n  let video = null\n  useEffect(() => {\n    video = document.querySelector(\"video\");\n  }, [])\n\n  useEffect(() => {\n    if (video) {\n      socket.on(\"offer\", (id, description) => {\n        peerConnection = new RTCPeerConnection(config);\n        peerConnection\n          .setRemoteDescription(description)\n          .then(() => peerConnection.createAnswer())\n          .then(sdp => peerConnection.setLocalDescription(sdp))\n          .then(() => {\n            socket.emit(\"answer\", id, peerConnection.localDescription);\n          });\n        peerConnection.ontrack = event => {\n          video.srcObject = event.streams[0];\n        };\n        peerConnection.onicecandidate = event => {\n          if (event.candidate) {\n            socket.emit(\"candidate\", id, event.candidate);\n          }\n        };\n      });\n\n\n      socket.on(\"candidate\", (id, candidate) => {\n        peerConnection\n          .addIceCandidate(new RTCIceCandidate(candidate))\n          .catch(e => console.error(e));\n      });\n\n      socket.on(\"connect\", () => {\n        socket.emit(\"watcher\");\n      });\n\n      socket.on(\"broadcaster\", () => {\n        socket.emit(\"watcher\");\n      });\n    }\n  }, [socket, video])\n\n  useEffect(() => {\n    window.onunload = window.onbeforeunload = () => {\n      socket.close();\n      peerConnection.close();\n    };\n  }, [window.onunload])\n\n\n  const handleAudio = (boolean) => {\n    if (video) {\n      video.muted = boolean;\n    }\n  }\n\n  return (\n    <>\n      <video playsInline autoPlay muted height={500} width={800} style={{ transform : 'rotateY(180deg)'}}></video>\n      <button id=\"enable-audio\" onClick={() => handleAudio(false)}>Enable audio</button>\n      <button id=\"enable-audio\" onClick={() => handleAudio(true)}>Disable audio</button>\n    </>\n  );\n};\n","import socketio from 'socket.io-client'\nimport { SOCKET_URL } from '../../config'\n\nexport const useSocketIO = () => {\n  console.log(\"client side socket hook chala\")\n  const socket = socketio.connect(SOCKET_URL)\n  return socket\n}\n","const SOCKET_URL = 'https://api.webrtcdemo.tk'\nexport {\n  SOCKET_URL\n}\n","import styled from '@emotion/styled'\n\nexport const GamesContainer = styled.div({\n  display: 'flex',\n  padding: '1%',\n  justifyContent: 'space-between',\n  maxWidth: 700\n})\n\nexport const GameIcon = styled.img({\n  width: '200px',\n  height: '150px',\n  display: 'block'\n})\n\nexport const GameTitle = styled.span({\n  fontWeight: 'bold',\n  fontSize: 15,\n  display: 'block',\n  border: '1px solid black',\n  textAlign: 'center'\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { GameIcon, GamesContainer, GameTitle } from './Home.styles'\n\nexport const Home = () => {\n  return (\n    <div>\n      <GamesContainer className='games-container'>\n        <Link to='/viewers'>\n          <GameIcon src='game-icon/sicbo-logo.png' alt='roulette_icon' />\n          <GameTitle>Viewers</GameTitle>\n        </Link>\n        <Link to='/broadcast-stream'>\n          <GameIcon src='game-icon/sicbo-logo.png' alt='roulette_icon' />\n          <GameTitle>Broadcast Stream</GameTitle>\n        </Link>\n      </GamesContainer>\n    </div>\n  )\n}\n","import { DragonTigerBroadcast } from '../pages/DragonTiger/BroadCast/DragonTigerBroadcast'\nimport { DragonTigerViewer } from '../pages/DragonTiger/Viewer/DragonTigerViewer'\nimport { Home } from '../pages/Home/Home'\n\nconst routerList = [\n  {\n    key: 1,\n    label: 'Home',\n    path: '/',\n    component: Home,\n    hasNavbar: true\n  },\n  {\n    key: 2,\n    label: 'broadcast-stream',\n    path: '/broadcast-stream',\n    component: DragonTigerBroadcast,\n    hasNavbar: true\n  },\n  {\n    key: 3,\n    label: 'viewers',\n    path: '/viewers',\n    component: DragonTigerViewer,\n    hasNavbar: true\n  }\n]\n\nexport default routerList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Home } from '../pages/Home/Home'\n\nconst RouteValidator = ({ hasNavbar, component: Component, ...props }) => {\n  if (hasNavbar) {\n    return (\n      <>\n        <Component />\n      </>\n    )\n  }\n  return <Home />\n}\n\nRouteValidator.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  hasNavbar: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired\n}\n\nexport default RouteValidator\n","import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport routes from './routerList'\nimport RouteValidator from './RouteValidator'\n\nconst CustomRoutes = () => (\n  <>\n    <Routes>\n      {routes.map(({ path, key, ...props }) => {\n        return (\n          <Route\n            path={path}\n            key={key}\n            exact\n            element={<RouteValidator path={path} {...props} />}\n          />\n        )\n      })}\n    </Routes>\n  </>\n)\n\nexport default CustomRoutes\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport CustomRoutes from './routes'\n\nconst Routes = () => {\n  return (\n    <Router>\n      <CustomRoutes />\n    </Router>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport './styles/App.css'\nimport AppRoutes from './routes'\n\nfunction App () {\n  return (\n      <AppRoutes />\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}